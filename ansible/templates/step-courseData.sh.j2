#!/bin/bash

##### preparing for KUBERNETES ####
{% if module.db_name == "kubernetes" and course.course_id != "k8s-init" and item.0 == 0 %}
kubeadm init --token abcdef.0123456789abcdef --token-ttl 0
mkdir ~/.kube
cp /etc/kubernetes/admin.conf ~/.kube/config
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
ssh -o StrictHostKeyChecking=no node01 "kubeadm join --token abcdef.0123456789abcdef --discovery-token-unsafe-skip-ca-verification $(hostname -I | cut -d' ' -f1):6443"
kubectl taint nodes --all node-role.kubernetes.io/master-
{% endif %}



{% if module.db_name == "kubernetes" and course.course_id == "k8s-node-bootstrap" and item.0 == 0 %}
ping -c1 node01 || ( echo "Something went wrong, sorry" && shutdown -r now )

#/opt/launch-kubeadm.sh
kubectl delete configmap -n kube-public cluster-info
kubectl delete secret -n kube-system bootstrap-token-96771a

ssh -o StrictHostKeyChecking=no node01 "mkdir -p /etc/kubernetes"
# ssh -o StrictHostKeyChecking=no node01 'echo KUBELET_KUBECONFIG_ARGS=\"--bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --kubeconfig=/etc/kubernetes/kubelet.conf --cgroup-driver=systemd\"> /etc/default/kubelet'
# ssh -o StrictHostKeyChecking=no node01 'echo KUBELET_CONFIG_ARGS=\"\">> /etc/default/kubelet'
# ssh -o StrictHostKeyChecking=no node01 'systemctl daemon-reload'

ssh -o StrictHostKeyChecking=no node01 "rm -rf /etc/systemd/system/kubelet.service.d"
{% endif %}



##### preparing for DOCKER ####
{% if module.db_name == "docker" and item.0 == 0 %}
:> /opt/launch-kubeadm.sh
ps -ef | grep /opt/launch-kubeadm.sh | grep -v grep | awk '{print $2}' | xargs -r kill -9
kubeadm reset -f || true
ps -ef | grep /usr/bin/kubelet | grep -v grep | awk '{print $2}' | xargs -r kill -9
systemctl stop kubelet
systemctl disable kubelet
docker image ls | egrep '(gcr.io|weaveworks|quay.io|prom|katacoda)' | awk '{print $3}' | xargs -r docker image rm
sudo iptables -t filter -F
sudo iptables -t filter -X
echo 'DOCKER_OPTS="-H unix:///var/run/docker.sock -H tcp://0.0.0.0:2375 -H tcp://0.0.0.0:2345 -H fd:// --bip 172.18.0.1/24 --insecure-registry registry.test.training.katacoda.com:4567 --storage-driver overlay --exec-opt native.cgroupdriver=systemd"'>>/etc/default/docker
sudo rm /etc/docker/daemon.json
sudo systemctl daemon-reload
sudo systemctl restart docker
{% endif %}


{{ item.1.courseData | default('') }}

