#!/bin/bash

{% if module.db_name == "kubernetes" and course.course_id != "k8s-init" and item.0 == 0 %}
kubeadm init --token abcdef.0123456789abcdef --token-ttl 0
mkdir ~/.kube
cp /etc/kubernetes/admin.conf ~/.kube/config
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
ssh -o StrictHostKeyChecking=no node01 "kubeadm join --token abcdef.0123456789abcdef --discovery-token-unsafe-skip-ca-verification $(hostname -I | cut -d' ' -f1):6443"
kubectl taint nodes --all node-role.kubernetes.io/master-
{% endif %}

{% if module.db_name == "docker" and item.0 == 0 %}
sudo systemctl stop docker
:> /opt/launch-kubeadm.sh
ps -ef | grep /opt/launch-kubeadm.sh | grep -v grep | awk '{print $2}' | xargs -r kill -9
kubeadm reset -f || true
ps -ef | grep /usr/bin/kubelet | grep -v grep | awk '{print $2}' | xargs -r kill -9
systemctl stop kubelet
systemctl disable kubelet
docker image ls | egrep '(gcr.io|weaveworks|quay.io|prom|katacoda)' | awk '{print $3}' | xargs -r docker image rm
sudo iptables -t filter -F
sudo iptables -t filter -X
sudo systemctl restart docker
{% endif %}


{{ item.1.courseData | default('') }}

